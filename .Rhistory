knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE)
library(tidyverse)
library(here)
library(vitae)
library(kableExtra)
readExcelSheets <- function(filename){
# read all sheets in .xlsx
all <- readxl::excel_sheets(filename)
# import each sheet into a list using readxl::read_excel
list <- lapply(all, function(x) readxl::read_excel(filename, sheet = x))
# save sheet name for each sheet (list)
names(list) <- all
# breaks up list and creates a dataframe for each sheet with df names matching sheet names
list2env(list, envir = .GlobalEnv)
}
# appointments <- read_csv(here("data", "appointments.csv"))
# education <- read_csv(here("data", "education.csv"))
# research <- read_csv(here("data", "research_experience.csv"))
# teaching <- read_csv(here("data", "teaching_supervision.csv"))
# awards <- read_csv(here("data", "awards.csv"))
# leadership <- read_csv(here("data", "leadership.csv"))
# presentations <- read_csv(here("data", "presentations.csv"))
# training <- read_csv(here("data", "training.csv"))
# skills <- read_csv(here("data", "skills_table.csv"))
# tools <- read_csv(here("data", "digital_tools.csv"))
readExcelSheets(here::here("Data", "ArthurHeimCareerDataEn.xlsx"))
education %>%
detailed_entries(what = degree,
when = year,
with = institution,
where = where,
why = details,
.protect = FALSE)
education %>%
detailed_entries(what = Degree,
when = Year,
with = Institution,
where = Where,
why = Details,
.protect = FALSE)
library(tidyverse)
library(here)
library(vitae)
library(kableExtra)
library(emojifont)
library(fontawesome)
emojifont
list.emojifonts()
library(fontawesome)
bib <- tempfile(fileext = ".bib")
bib
# did not like this format so will add manually for now
bibliography_entries(here("Data", "publi_heim.bib"))%>%
arrange(desc(year))
# did not like this format so will add manually for now
bibliography_entries(here("Data", "publi_heim.bib"))#%>%
arrange(desc(issued))
# did not like this format so will add manually for now
bibliography_entries(here("Data", "publi_heim.bib"))%>%
arrange(desc(issued))
# did not like this format so will add manually for now
bibliography_entries(here("Data", "publi_heim.bib"))#%>%
# did not like this format so will add manually for now
bib <- bibliography_entries(here("Data", "publi_heim.bib"))#%>%
bib$issued
arrange(desc(bib$issued))
desc(bib$issued)
bib$issued
arrange(bib$issued)
bibliography_entries
str_detect(bib$author,"Heim")
bib %>% arrange(desc(author$family))
bib$id %>% str_remove_all(.,"[:alpha:]")
bib$id %>% str_remove_all(.,"[:alpha:]") %>% arrange(desc(.))
# did not like this format so will add manually for now
bib <- bibliography_entries(here("Data", "publi_heim.bib"))%>%
mutate(dt=as.numeric(str_remove_all(id,"[:alpha:]"))) %>% arrange(desc(dt))
bib %>% arrange(desc(author$family))
# did not like this format so will add manually for now
bib <- bibliography_entries(here("Data", "publi_heim.bib"))%>%
mutate(dt=as.numeric(str_remove_all(id,"[:alpha:]"))) %>% arrange(desc(dt))
bib #%>% arrange(desc(author$family))
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE)
library(tidyverse)
library(here)
library(vitae)
library(kableExtra)
library(emojifont)
library(fontawesome)
readExcelSheets <- function(filename){
# read all sheets in .xlsx
all <- readxl::excel_sheets(filename)
# import each sheet into a list using readxl::read_excel
list <- lapply(all, function(x) readxl::read_excel(filename, sheet = x))
# save sheet name for each sheet (list)
names(list) <- all
# breaks up list and creates a dataframe for each sheet with df names matching sheet names
list2env(list, envir = .GlobalEnv)
}
# appointments <- read_csv(here("data", "appointments.csv"))
# education <- read_csv(here("data", "education.csv"))
# research <- read_csv(here("data", "research_experience.csv"))
# teaching <- read_csv(here("data", "teaching_supervision.csv"))
# awards <- read_csv(here("data", "awards.csv"))
# leadership <- read_csv(here("data", "leadership.csv"))
# presentations <- read_csv(here("data", "presentations.csv"))
# training <- read_csv(here("data", "training.csv"))
# skills <- read_csv(here("data", "skills_table.csv"))
# tools <- read_csv(here("data", "digital_tools.csv"))
readExcelSheets(here::here("Data", "ArthurHeimCareerDataEn.xlsx"))
#bib <- tempfile(fileext = ".bib")
appointments %>%
filter(include == "yes") %>%
detailed_entries(what = role,
when = glue::glue("{start_date}--{end_date}"),
with = institution,
where = where,
why = details,
.protect = FALSE)
education %>%
detailed_entries(what = Institution,
when = Year,
with = Degree,
where = Where,
why = Details,
.protect = FALSE)
# skills <- read_csv(here("data", "skills.csv"))
# skills %>%
#   detailed_entries(with = type,
#                    why = skill)
#
skills %>%
kable(booktabs = TRUE, format = "latex") %>%
kable_styling(full_width = F, font_size = 8, latex_options = "hold_position") %>%
row_spec(0, bold = T)
# did not like this format so will add manually for now
bib <- bibliography_entries(here("Data", "publi_heim.bib"))%>%
mutate(dt=as.numeric(str_remove_all(id,"[:alpha:]"))) %>% arrange(desc(dt))
bib #%>% arrange(desc(author$family))
#arrange(desc(issued))
# bibliography_entries(here("data", "papers.bib"))
install.packages(c("broom", "Hmisc", "knitr", "modelsummary", "mvtnorm", "parameters", "quantreg", "tinytable"))
Thesis %>%
filter(draftAvailable != "yes") %>%
detailed_entries(what = subtitle,
when = glue::glue("{status}: {end_date}"),
with = title,
where = coauthors,
why = details,
.protect = FALSE)
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE)
library(tidyverse)
library(here)
library(vitae)
library(kableExtra)
library(emojifont)
library(fontawesome)
readExcelSheets <- function(filename){
# read all sheets in .xlsx
all <- readxl::excel_sheets(filename)
# import each sheet into a list using readxl::read_excel
list <- lapply(all, function(x) readxl::read_excel(filename, sheet = x))
# save sheet name for each sheet (list)
names(list) <- all
# breaks up list and creates a dataframe for each sheet with df names matching sheet names
list2env(list, envir = .GlobalEnv)
}
# appointments <- read_csv(here("data", "appointments.csv"))
# education <- read_csv(here("data", "education.csv"))
# research <- read_csv(here("data", "research_experience.csv"))
# teaching <- read_csv(here("data", "teaching_supervision.csv"))
# awards <- read_csv(here("data", "awards.csv"))
# leadership <- read_csv(here("data", "leadership.csv"))
# presentations <- read_csv(here("data", "presentations.csv"))
# training <- read_csv(here("data", "training.csv"))
# skills <- read_csv(here("data", "skills_table.csv"))
# tools <- read_csv(here("data", "digital_tools.csv"))
readExcelSheets(here::here("Data", "ArthurHeimCareerDataEn.xlsx"))
#bib <- tempfile(fileext = ".bib")
appointments %>%
filter(current == "yes") %>%
detailed_entries(with = role,
when = glue::glue("{start_date}--{end_date}"),
what = institution,
where = where,
why = details,
.protect = FALSE)
appointments %>%
filter(current != "yes") %>%
detailed_entries(with = role,
when = glue::glue("{start_date}--{end_date}"),
what = institution,
where = where,
why = details,
.protect = FALSE)
education %>%
detailed_entries(where = Institution,
when = Year,
with = Degree,
what = Major,
why = Details,
.protect = FALSE)
teaching %>%
detailed_entries(what = institution,
when = glue::glue("{start_date}--{end_date}"),
with = role,
where = where,
why = details,
.protect = FALSE)
Thesis %>%
filter(draftAvailable == "yes") %>%
detailed_entries(what = subtitle,
when = glue::glue("{status}: {end_date}"),
with = title,
where = coauthors,
why = details,
.protect = FALSE)
Thesis %>%
filter(draftAvailable != "yes") %>%
detailed_entries(what = subtitle,
when = glue::glue("{status}: {end_date}"),
with = title,
where = coauthors,
why = details,
.protect = FALSE)
# skills <- read_csv(here("data", "skills.csv"))
# skills %>%
#   detailed_entries(with = type,
#                    why = skill)
#
skills %>%
kable(booktabs = TRUE, format = "latex") %>%
kable_styling(full_width = F, font_size = 8, latex_options = "hold_position") %>%
row_spec(0, bold = T)
# did not like this format so will add manually for now
bib <- bibliography_entries(here("Data", "publi_heim.bib"))%>%
mutate(dt=as.numeric(str_remove_all(id,"[:alpha:]"))) %>% arrange(desc(dt))
bib %>% arrange(desc(author$family))
#arrange(desc(issued))
# bibliography_entries(here("data", "papers.bib"))
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE)
library(tidyverse)
library(here)
library(vitae)
library(kableExtra)
library(emojifont)
library(fontawesome)
# skills <- read_csv(here("data", "skills.csv"))
# skills %>%
#   detailed_entries(with = type,
#                    why = skill)
#
skills %>%
kable(booktabs = TRUE, format = "latex",escape = TRUE) %>%
kable_styling(full_width = F, latex_options = "hold_position") %>%
row_spec(0, bold = T)
# skills <- read_csv(here("data", "skills.csv"))
# skills %>%
#   detailed_entries(with = type,
#                    why = skill)
#
skills %>%
kable(booktabs = TRUE, format = "latex",escape = FALSE) %>%
kable_styling(full_width = F,fontsize=10, latex_options = "hold_position") %>%
row_spec(0, bold = T)
bib$type=="book"
bib$type
# did not like this format so will add manually for now
bib <- bibliography_entries(here("Data", "publi_heim.bib"))%>%
mutate(dt=as.numeric(str_remove_all(id,"[:alpha:]"))) %>% arrange(desc(dt))
bib %>% filter(bib$type=="book")
bib %>% filter(bib$type=="article")
bib$type
bib %>% filter(bib$type=="article-journal")
bib
# did not like this format so will add manually for now
bib <- bibliography_entries(here("Data", "publi_heim.bib"))%>%distinct() %>%
mutate(dt=as.numeric(str_remove_all(id,"[:alpha:]"))) %>% arrange(desc(dt))
# did not like this format so will add manually for now
bib <- bibliography_entries(here("Data", "publi_heim.bib"))%>%distinct(title,.keep_all = TRUE) %>%
mutate(dt=as.numeric(str_remove_all(id,"[:alpha:]"))) %>% arrange(desc(dt))
View(bib)
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE)
library(tidyverse)
library(here)
library(vitae)
library(kableExtra)
library(emojifont)
library(fontawesome)
readExcelSheets <- function(filename){
# read all sheets in .xlsx
all <- readxl::excel_sheets(filename)
# import each sheet into a list using readxl::read_excel
list <- lapply(all, function(x) readxl::read_excel(filename, sheet = x))
# save sheet name for each sheet (list)
names(list) <- all
# breaks up list and creates a dataframe for each sheet with df names matching sheet names
list2env(list, envir = .GlobalEnv)
}
# appointments <- read_csv(here("data", "appointments.csv"))
# education <- read_csv(here("data", "education.csv"))
# research <- read_csv(here("data", "research_experience.csv"))
# teaching <- read_csv(here("data", "teaching_supervision.csv"))
# awards <- read_csv(here("data", "awards.csv"))
# leadership <- read_csv(here("data", "leadership.csv"))
# presentations <- read_csv(here("data", "presentations.csv"))
# training <- read_csv(here("data", "training.csv"))
# skills <- read_csv(here("data", "skills_table.csv"))
# tools <- read_csv(here("data", "digital_tools.csv"))
readExcelSheets(here::here("Data", "ArthurHeimCareerDataEn.xlsx"))
#bib <- tempfile(fileext = ".bib")
MyJob <- appointments %>%
filter(current == "yes") %>%
detailed_entries(with = role,
when = glue::glue("{start_date}--{end_date}"),
what = institution,
where = where,
why = details,
.protect = FALSE)
MyJob
otherjob <- appointments %>%
filter(current != "yes") %>%
detailed_entries(with = role,
when = glue::glue("{start_date}--{end_date}"),
what = institution,
where = where,
why = details,
.protect = FALSE)
otherjob
education %>%
detailed_entries(where = Institution,
when = Year,
with = Degree,
what = Major,
why = Details,
.protect = FALSE)
# skills <- read_csv(here("data", "skills.csv"))
# skills %>%
#   detailed_entries(with = type,
#                    why = skill)
#
skills %>%
kable(booktabs = TRUE, format = "latex",escape = FALSE) %>%
kable_styling(full_width = F,font_size=10, latex_options = "hold_position") %>%
row_spec(0, bold = T)
teaching %>%
detailed_entries(what = institution,
when = glue::glue("{start_date}--{end_date}"),
with = role,
where = where,
why = details,
.protect = FALSE)
Thesis %>%
filter(draftAvailable == "yes") %>%
detailed_entries(what = subtitle,
when = glue::glue("{status}: {end_date}"),
with = title,
where = coauthors,
why = details,
.protect = FALSE)
Thesis %>%
filter(draftAvailable != "yes") %>%
detailed_entries(what = subtitle,
when = glue::glue("{status}: {end_date}"),
with = title,
where = coauthors,
why = details,
.protect = FALSE)
# did not like this format so will add manually for now
bib <- bibliography_entries(here("Data", "publi_heim.bib"))%>%distinct(title,.keep_all = TRUE) %>%
mutate(dt=as.numeric(str_remove_all(id,"[:alpha:]"))) %>% arrange(desc(dt))
bib %>% filter(bib$type=="book")
#arrange(desc(issued))
# bibliography_entries(here("data", "papers.bib"))
bib %>% filter(dt<2023 & type!="webpage")
#arrange(desc(issued))
# bibliography_entries(here("data", "papers.bib"))
rm(list=ls())
unlink("ArthurHeim/ArthurHeim_cache", recursive = TRUE)
update.packages()
update.packages()
tinytex::tlmgr_update()
appointments <- read_csv(here("Data", "appointments.csv"))
readExcelSheets(here::here("Data", "ArthurHeimCareerDataEn.xlsx"))
# breaks up list and creates a dataframe for each sheet with df names matching sheet names
list2env(list, envir = .GlobalEnv)
readExcelSheets <- function(filename){
# read all sheets in .xlsx
all <- readxl::excel_sheets(filename)
# import each sheet into a list using readxl::read_excel
list <- lapply(all, function(x) readxl::read_excel(filename, sheet = x))
# save sheet name for each sheet (list)
names(list) <- all
# breaks up list and creates a dataframe for each sheet with df names matching sheet names
list2env(list, envir = .GlobalEnv)
}
readExcelSheets(here::here("Data", "ArthurHeimCareerDataEn.xlsx"))
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE)
library(tidyverse)
library(here)
library(vitae)
library(kableExtra)
library(emojifont)
library(fontawesome)
library(tibble)
MyJob <- appointments %>%
filter(current == "yes") %>% tribble() %>%
detailed_entries(with = role,
when = glue::glue("{start_date}--{end_date}"),
what = institution,
where = where,
why = details,
.protect = FALSE)
MyJob <- appointments %>%
filter(current == "yes") %>% tribble() #%>%
MyJob <- appointments %>%
filter(current == "yes") %>% as.tribble() #%>%
MyJob <- appointments %>%
filter(current == "yes") %>% as.tibble() #%>%
MyJob <- appointments %>%
filter(current == "yes") %>% as.tibble() %>%
detailed_entries(with = role,
when = glue::glue("{start_date}--{end_date}"),
what = institution,
where = where,
why = details,
.protect = FALSE)
MyJob
install.packages("vitae")
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE)
library(tidyverse)
library(here)
library(vitae)
library(kableExtra)
library(emojifont)
library(fontawesome)
library(tibble)
# did not like this format so will add manually for now
bib <- bibliography_entries(here("Data", "publi_heim.bib"))%>%distinct(title,.keep_all = TRUE) %>%
mutate(dt=as.numeric(str_remove_all(id,"[:alpha:]"))) %>% arrange(desc(dt))
bib$author
bib$author!="Marine Montaignac"
names(bib)
str_detect(bib$id,"ontaignac")
bib %>% filter(dt<2023 & type %in% c("webpage",'book')==FALSE & str_detect(bib$id,"ontaignac")==FALSE)
bib %>% filter(dt<2023 & (type %in% c("webpage",'book')==FALSE) & str_detect(bib$id,"ontaignac")==FALSE)
opts_knit$get
knitr::opts_knit$get('rmarkdown.pandoc.to')
